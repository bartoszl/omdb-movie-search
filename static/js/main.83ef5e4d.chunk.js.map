{"version":3,"sources":["assets/search-bg.jpg","assets/movie-background.jpg","components/SearchContainer.js","constants/colors.js","components/Input/Input.js","components/Button/Button.js","hooks/useFilters.js","components/SearchFormWrapper.js","components/Error/Error.js","api/movies.js","actions/movies.js","reducers/movies.js","selectors/movies.js","components/SearchForm.js","constants/routes.js","components/Movie.js","components/MovieContainer.js","components/Logo.js","components/Content/Content.js","components/TypingAnimation/TypingAnimation.js","components/Layout/Layout.js","components/CountDisplay/CountDisplay.js","components/Loader/Loader.js","components/LoadMoreButton/LoadMoreButton.js","components/InfoLabel/InfoLabel.js","components/Ratings/Ratings.js","components/InfoText/InfoText.js","pages/IndexPage/index.js","pages/SingleMoviePage/index.js","App.js","reducers/index.js","store.js","config/theme.js","Providers.js","serviceWorker.js","index.js"],"names":["module","exports","SearchContainer","styled","div","collapsed","bg","Input","input","Button","button","theme","colors","primary","useFilters","useLocation","search","pathname","history","useHistory","filters","useMemo","qs","parse","slice","navigateWithSearchQuery","newFilters","url","push","stringify","compileUrlWithQuery","SearchFormWrapper","p","danger","process","REACT_APP_API_URL","REACT_APP_API_KEY","getMovies","params","a","axios","get","apikey","data","getMovieById","id","i","plot","wait","time","Promise","resolve","setTimeout","createAsyncThunk","rejectWithValue","api","Response","Error","records","Search","count","totalResults","record","clearMovies","createAction","initialState","isLoading","error","reducer","createReducer","builder","addCase","pending","state","fulfilled","action","payload","rejected","type","getMoviesState","movies","getMovieList","getIsLoadingFlag","getCount","getError","getSingleMovie","SearchForm","defaultValues","useForm","register","handleSubmit","errors","useSelector","handleSearchSubmit","values","onSubmit","data-testid","ref","minLength","name","placeholder","icon","faSearch","color","s","defaultProps","MovieContainer","Link","MoviePoster","img","Title","h4","Year","h5","Movie","imgSrc","title","year","to","src","alt","LogoContainer","Logo","faFilm","size","movieBackground","keyframes","blink","TypingHeader","h1","Layout","children","TypingAnimation","Content","CountText","CountDisplay","loaderCss","css","Loader","loading","attrs","background","shadow","span","RatingList","ul","Header","Rating","li","Ratings","ratings","map","rating","InfoLabel","Source","Value","InfoText","label","IndexPage","dispatch","useDispatch","useEffect","hasMore","length","Poster","imdbID","key","replace","style","width","display","justifyContent","LoadMoreButton","onClick","page","Math","floor","MovieDetails","small","Center","h2","SingleMoviePage","useParams","movie","Released","Runtime","Genre","Country","Plot","Director","Writer","Actors","Awards","App","basename","path","component","combineReducers","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","large","Providers","store","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.83ef5e4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search-bg.43ac756b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/movie-background.7c4c06c1.jpg\";","import styled from 'styled-components';\nimport { BACKGROUND_GREY } from '../constants/colors';\nimport bg from '../assets/search-bg.jpg';\n\nconst SearchContainer = styled.div`\n  width: 100vw;\n  height: ${({ collapsed }) => (collapsed ? '15vh' : '100vh')};\n  background-image: ${({ collapsed }) => (!collapsed ? `url(${bg})` : 'none')};\n  background-color: ${BACKGROUND_GREY};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  transition: all 0.75s ease-out;\n  position: fixed;\n  top: 0;\n  left: 0;\n`;\n\nexport default SearchContainer;\n","export const SHADOW = '#aaa';\nexport const BACKGROUND_GREY = '#111';\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n  padding: 0.75rem 0.25rem;\n  border-top-left-radius: 3px;\n  border-bottom-left-radius: 3px;\n  border: none;\n  width: 16rem;\n`;\n\nexport default Input;\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  padding: 0.75rem 1.25rem;\n  border-top-right-radius: 3px;\n  border-bottom-right-radius: 3px;\n  border: none;\n  background-color: ${({ theme }) => theme.colors.primary};\n  cursor: pointer;\n`;\n\nexport default Button;\n","import { useMemo } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport qs from 'qs';\n\nconst useFilters = () => {\n  const { search, pathname } = useLocation();\n  const history = useHistory();\n\n  const filters = useMemo(() => qs.parse(search.slice(1)), [search]);\n\n  const navigateWithSearchQuery = (newFilters, url) => {\n    history.push(`${url || pathname}?${qs.stringify({\n      ...filters,\n      ...newFilters,\n    })}`);\n  };\n\n  const compileUrlWithQuery = (url) => `${url}?${qs.stringify(filters)}`;\n\n  return {\n    navigateWithSearchQuery,\n    filters,\n    compileUrlWithQuery,\n  };\n};\n\nexport default useFilters;\n","import styled from 'styled-components';\nimport { SHADOW } from '../constants/colors';\n\nconst SearchFormWrapper = styled.div`\n  box-shadow: 0 0 5px 1px ${SHADOW};\n  border-radius: 3px;\n`;\n\nexport default SearchFormWrapper;\n","import styled from 'styled-components';\n\nexport default styled.p`\n  color: ${({ theme }) => theme.colors.danger};\n`;\n","import axios from 'axios';\n\nconst { REACT_APP_API_URL, REACT_APP_API_KEY } = process.env;\n\nexport const getMovies = async (params) => {\n  const { data } = await axios.get(REACT_APP_API_URL, {\n    params: {\n      apikey: REACT_APP_API_KEY,\n      ...params,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieById = async (id) => getMovies({ i: id, plot: 'full' });\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit';\nimport * as api from '../api/movies';\n\nconst wait = (time) => new Promise((resolve) => setTimeout(resolve, time));\n\nexport const getMovies = createAsyncThunk(\n  'GET_MOVIE_LIST',\n  async (params, { rejectWithValue }) => {\n    const data = await api.getMovies(params);\n\n    await wait(3000);\n\n    if (data.Response === 'False') {\n      return rejectWithValue(data.Error);\n    }\n\n    return {\n      records: data.Search,\n      count: data.totalResults,\n    };\n  },\n);\n\nexport const getMovieById = createAsyncThunk(\n  'GET_MOVIE_BY_ID',\n  async (id, { rejectWithValue }) => {\n    const data = await api.getMovieById(id);\n\n    await wait(3000);\n\n    if (data.Response === 'False') {\n      return rejectWithValue(data.Error);\n    }\n\n    return {\n      record: data,\n    };\n  },\n);\n\nexport const clearMovies = createAction('CLEAR_MOVIES');\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  getMovies, getMovieById, clearMovies,\n} from '../actions/movies';\n\nexport const initialState = {\n  isLoading: false,\n  records: [],\n  record: {},\n  error: null,\n  count: 0,\n};\n\nconst reducer = createReducer(initialState, (builder) => builder\n  .addCase(getMovies.pending, (state) => ({\n    ...state,\n    isLoading: true,\n    // records: [],\n    error: null,\n    count: 0,\n  }))\n  .addCase(getMovies.fulfilled, (state, action) => ({\n    ...state,\n    records: [\n      ...state.records,\n      ...action.payload.records,\n    ],\n    isLoading: false,\n    error: null,\n    count: action.payload.count,\n  }))\n  .addCase(getMovies.rejected, (state, action) => ({\n    ...state,\n    isLoading: false,\n    records: [],\n    error: action.payload,\n    count: 0,\n  }))\n\n  .addCase(getMovieById.pending, (state) => ({\n    ...state,\n    isLoading: true,\n    record: {},\n    error: null,\n  }))\n  .addCase(getMovieById.fulfilled, (state, action) => ({\n    ...state,\n    record: action.payload.record,\n    isLoading: false,\n    error: null,\n  }))\n  .addCase(getMovieById.rejected, (state, action) => ({\n    ...state,\n    isLoading: false,\n    record: {},\n    error: action.payload,\n  }))\n\n  .addCase(clearMovies.type, (state) => ({\n    ...state,\n    records: [],\n  })));\n\nexport default reducer;\n","import { initialState } from '../reducers/movies';\n\nexport const getMoviesState = (\n  state,\n) => state.movies || initialState;\n\nexport const getMovieList = (\n  state,\n) => getMoviesState(state).records;\n\nexport const getIsLoadingFlag = (\n  state,\n) => getMoviesState(state).isLoading;\n\nexport const getCount = (\n  state,\n) => getMoviesState(state).count;\n\nexport const getError = (\n  state,\n) => getMoviesState(state).error;\n\nexport const getSingleMovie = (\n  state,\n) => getMoviesState(state).record;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { useSelector } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport useFilters from '../hooks/useFilters';\nimport Input from './Input';\nimport Button from './Button';\nimport SearchFormWrapper from './SearchFormWrapper';\nimport Error from './Error';\n\nimport { getError } from '../selectors/movies';\nimport { INDEX_URL } from '../constants/routes';\n\nconst SearchForm = ({ defaultValues }) => {\n  const {\n    register, handleSubmit, errors,\n  } = useForm({\n    defaultValues,\n  });\n\n  const error = useSelector(getError);\n\n  const { navigateWithSearchQuery } = useFilters();\n\n  const handleSearchSubmit = async (values) => {\n    navigateWithSearchQuery(values, INDEX_URL);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(handleSearchSubmit)} data-testid=\"search-form\">\n      <SearchFormWrapper>\n        <Input\n          type=\"text\"\n          ref={register({ minLength: 2 })}\n          name=\"s\"\n          placeholder=\"Search...\"\n        />\n        <Button type=\"submit\">\n          <FontAwesomeIcon icon={faSearch} color=\"white\" />\n        </Button>\n      </SearchFormWrapper>\n      <Error>\n        { (errors.s && 'Query should be at least 2 characters long') || error }\n      </Error>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  defaultValues: PropTypes.shape({\n    s: PropTypes.string,\n  }),\n};\n\nSearchForm.defaultProps = {\n  defaultValues: {},\n};\n\nexport default SearchForm;\n","export const INDEX_URL = '/';\nexport const SINGLE_MOVIE_URL = '/movie/:id';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { SHADOW, BACKGROUND_GREY } from '../constants/colors';\nimport { SINGLE_MOVIE_URL } from '../constants/routes';\n\nconst MovieContainer = styled(Link)`\n  margin: 4px 8px 16px 8px;\n  width: 248px;\n  padding: 4px;\n  border-radius: 3px;\n  background-color: ${BACKGROUND_GREY};\n  color: white;\n  box-shadow: 0 0 5px 1px ${SHADOW};\n  transition: all 0.25s;\n  text-decoration: none;\n\n  &:hover {\n    box-shadow: 0 0 7px 2px ${SHADOW};\n    padding: 8px;\n    margin: 0px 4px 12px 4px;\n  }\n`;\n\nconst MoviePoster = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nconst Title = styled.h4`\n  margin-top: 0.75rem;\n  margin-bottom: 0.25rem;\n`;\n\nconst Year = styled.h5`\n  margin-top: 0.25rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst Movie = ({\n  imgSrc, title, year, to,\n}) => (\n  <MovieContainer to={to}>\n    <MoviePoster src={imgSrc} alt={title} />\n    <Title>\n      { title }\n    </Title>\n    <Year>\n      { year }\n    </Year>\n  </MovieContainer>\n);\n\nMovie.propTypes = {\n  imgSrc: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  year: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired,\n};\n\nexport default Movie;\n","import styled from 'styled-components';\n\nconst MovieContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  \n  width: 100%;\n  height: 100%;\n`;\n\nexport default MovieContainer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilm } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport { INDEX_URL } from '../constants/routes';\n\nconst LogoContainer = styled(Link)`\n  position: fixed;\n  left: 2rem;\n  top: 1.75rem;\n  cursor: pointer;\n`;\n\nconst Logo = () => (\n  <LogoContainer to={INDEX_URL}>\n    <FontAwesomeIcon icon={faFilm} size=\"4x\" color=\"white\" />\n  </LogoContainer>\n);\n\nexport default Logo;\n","import styled from 'styled-components';\nimport movieBackground from '../../assets/movie-background.jpg';\n\nexport default styled.div`\n  padding: 20vh 0px;\n  width: 100vw;\n  min-height: 100vh;\n  box-sizing: border-box;\n  background-image: url(${movieBackground});\n  background-attachment: fixed;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n","import styled, { keyframes } from 'styled-components';\n\nconst type = keyframes`\n  from { \n    width: 0;\n  }\n  to { \n    width: 26rem ;\n  }\n`;\n\nconst blink = keyframes`\n  from{\n    border-right-color: rgba(255,255,255,.75);\n  }\n  to{\n    border-right-color: transparent;\n  }\n`;\n\n// Here we create a component that will rotate everything we pass in over two seconds\nconst TypingHeader = styled.h1`\n  overflow: hidden; \n  border-right: 0.15rem solid rgba(255,255,255,.75); \n  white-space: nowrap; \n  margin: 0 auto;\n  letter-spacing: 0.15rem;\n  color: white;\n  position: absolute;\n  top: 13rem;\n\n  animation: ${type} 2s steps(30) 1s 1 normal both,\n  ${blink} 500ms steps(30) infinite normal;\n`;\n\nexport default TypingHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useFilters from '../../hooks/useFilters';\nimport SearchContainer from '../SearchContainer';\nimport SearchForm from '../SearchForm';\nimport Logo from '../Logo';\nimport Content from '../Content';\nimport TypingAnimation from '../TypingAnimation';\n\nconst Layout = ({ children }) => {\n  const { filters } = useFilters();\n  const { s } = filters;\n\n  return (\n    <>\n      <SearchContainer collapsed={s}>\n        <Logo />\n        { !s && (\n          <TypingAnimation>\n            Find your favorite movie!\n          </TypingAnimation>\n        )}\n        <SearchForm defaultValues={filters} />\n      </SearchContainer>\n      <Content>\n        { children }\n      </Content>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst CountText = styled.p`\n  color: white;\n  font-size: 1.25rem;\n  text-align: center;\n  margin-bottom: 2rem;\n  margin-top: 0;\n`;\n\nconst CountDisplay = ({ count }) => (\n  <CountText>\n    { `Found ${count} movies.`}\n  </CountText>\n);\n\nCountDisplay.propTypes = {\n  count: PropTypes.number,\n};\n\nCountDisplay.defaultProps = {\n  count: 0,\n};\n\nexport default CountDisplay;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from '@emotion/core';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\nconst loaderCss = css`\n  margin-top: 150px;\n`;\n\nconst Loader = ({ isLoading }) => (\n  <BeatLoader color=\"white\" size={50} loading={isLoading} css={loaderCss} />\n);\n\nLoader.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport default styled.button.attrs(() => ({\n  type: 'button',\n}))`\n  color: white;\n  font-size: 1.1rem;\n  border: none;\n  background-color: ${({ theme }) => theme.colors.background};\n  cursor: pointer;\n  padding: 0.75rem 1.5rem;\n  box-shadow: 0 0 5px 1px ${({ theme }) => theme.colors.shadow};\n  transition: all 0.25s;\n  margin-top: 1.5rem;\n\n  &:hover {\n    box-shadow: 0 0 7px 2px ${({ theme }) => theme.colors.shadow};\n  }\n`;\n","import styled from 'styled-components';\n\nexport default styled.span`\n  font-weight: 600;\n  font-size: 0.9rem;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport InfoLabel from '../InfoLabel';\n\nconst RatingList = styled.ul`\n  list-style: none;\n  padding-inline-start: 0;\n  margin-top: 0;\n`;\n\nconst Header = styled.h4`\n  margin-bottom: 0.5rem;\n`;\n\nconst Rating = styled.li`\n  margin-bottom: 0.25rem;\n`;\n\nconst Ratings = ({ ratings }) => (\n  <div>\n    <Header> Ratings: </Header>\n    <RatingList>\n      { ratings && ratings.map((rating) => (\n        <Rating>\n          {' '}\n          <InfoLabel>\n            {' '}\n            { rating.Source }\n            :\n            {' '}\n          </InfoLabel>\n          {' '}\n          { rating.Value }\n        </Rating>\n      ))}\n    </RatingList>\n  </div>\n);\n\nRatings.propTypes = {\n  ratings: PropTypes.arrayOf(PropTypes.shape({\n    Source: PropTypes.string.isRequired,\n    Value: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nexport default Ratings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InfoLabel from '../InfoLabel';\n\nconst InfoText = ({ label, children }) => (\n  <p>\n    <InfoLabel>\n      { label }\n    </InfoLabel>\n    { children }\n  </p>\n);\n\nInfoText.propTypes = {\n  label: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default InfoText;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useFilters from '../../hooks/useFilters';\nimport {\n  Movie, MovieContainer, CountDisplay, Loader, LoadMoreButton,\n} from '../../components';\nimport { getMovies, clearMovies } from '../../actions/movies';\nimport { getMovieList, getIsLoadingFlag, getCount } from '../../selectors/movies';\nimport { SINGLE_MOVIE_URL } from '../../constants/routes';\n\nconst PER_PAGE = 10;\n\nconst IndexPage = () => {\n  const { filters, compileUrlWithQuery } = useFilters();\n  const { s } = filters;\n  const dispatch = useDispatch();\n  const movies = useSelector(getMovieList);\n  const isLoading = useSelector(getIsLoadingFlag);\n  const count = useSelector(getCount);\n\n  useEffect(() => {\n    if (s) {\n      dispatch(clearMovies());\n      dispatch(getMovies(filters));\n    }\n  }, [filters]);\n\n  const handleMoreMovies = () => {\n    dispatch(getMovies({\n      ...filters,\n      page: Math.floor(movies.length / PER_PAGE) + 1,\n    }));\n  };\n\n  const hasMore = movies.length < count;\n\n  const compileMovieUrl = (id) => compileUrlWithQuery(SINGLE_MOVIE_URL.replace(':id', id));\n\n  return (\n    <>\n      { !isLoading && <CountDisplay count={count} /> }\n      <MovieContainer>\n        { movies.map(({\n          Poster, Title, Year, imdbID,\n        }) => (\n          <Movie\n            imgSrc={Poster}\n            title={Title}\n            year={Year}\n            key={imdbID}\n            to={compileMovieUrl(imdbID)}\n          />\n        ))}\n      </MovieContainer>\n      <div style={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\n        <Loader isLoading={isLoading} />\n        { hasMore && (\n        <LoadMoreButton\n          type=\"button\"\n          onClick={handleMoreMovies}\n        >\n          Load More\n        </LoadMoreButton>\n        )}\n      </div>\n\n    </>\n  );\n};\n\nexport default IndexPage;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Loader, Ratings, InfoText,\n} from '../../components';\n\nimport { getMovieById } from '../../actions/movies';\nimport { getSingleMovie, getIsLoadingFlag } from '../../selectors/movies';\n\nconst MovieDetails = styled.div`\n  background-color: ${({ theme }) => theme.colors.background};\n  box-shadow: ${({ theme }) => theme.shadow.small};\n  color: white;\n  padding: 1rem;\n  width: 70%;\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 3px;\n`;\n\nconst Poster = styled.img`\n  width: 248px;\n  height: auto;\n  margin-right: 1rem;\n`;\n\nconst Center = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Title = styled.h2`\n  margin-top: 0;\n`;\n\nconst SingleMoviePage = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const movie = useSelector(getSingleMovie);\n  const isLoading = useSelector(getIsLoadingFlag);\n\n  useEffect(() => {\n    dispatch(getMovieById(id));\n  }, [id]);\n\n  if (isLoading) {\n    return (\n      <Center>\n        <Loader />\n      </Center>\n    );\n  }\n\n  return (\n    <MovieDetails>\n      <div>\n        <Poster src={movie.Poster} alt={movie.Title} />\n        <Ratings ratings={movie.Ratings || []} />\n      </div>\n      <div>\n        <Title>\n          { `${movie.Title} (${movie.Year})` }\n        </Title>\n        <h4>\n          { `${movie.Released}, ${movie.Runtime}, ${movie.Genre}, ${movie.Country}` }\n        </h4>\n        <p>\n          { movie.Plot }\n        </p>\n        <InfoText label=\"Director: \">\n          { movie.Director }\n        </InfoText>\n        <InfoText label=\"Writer: \">\n          { movie.Writer }\n        </InfoText>\n        <InfoText label=\"Actors: \">\n          { movie.Actors }\n        </InfoText>\n        <InfoText label=\"Awards: \">\n          { movie.Awards }\n        </InfoText>\n      </div>\n    </MovieDetails>\n  );\n};\n\nexport default SingleMoviePage;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { Layout } from './components';\nimport { IndexPage, SingleMoviePage } from './pages';\nimport { INDEX_URL, SINGLE_MOVIE_URL } from './constants/routes';\n\nconst App = () => (\n  <HashRouter basename=\"/\">\n    <Layout>\n      <Switch>\n        <Route path={SINGLE_MOVIE_URL} component={SingleMoviePage} />\n        <Route path={INDEX_URL} component={IndexPage} />\n      </Switch>\n    </Layout>\n  </HashRouter>\n);\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nimport movies from './movies';\n\nexport default combineReducers({\n  movies,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\n\nexport default createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n","const shadow = '#aaa';\n\nexport default {\n  colors: {\n    primary: '#0b3849',\n    danger: '#bf2b17',\n    background: '#111',\n    shadow,\n  },\n  shadow: {\n    small: `0 0 5px 1px ${shadow}`,\n    large: `0 0 7px 2px ${shadow}`,\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport store from './store';\nimport theme from './config/theme';\n\nconst Providers = ({ children }) => (\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      { children }\n    </ThemeProvider>\n  </Provider>\n);\n\nProviders.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Providers;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport App from './App';\nimport Providers from './Providers';\nimport * as serviceWorker from './serviceWorker';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@200;400;600&display=swap');\n\n  body {\n    margin: 0;\n    padding: 0;\n  }\n\n  * {\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 400;\n  }\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}